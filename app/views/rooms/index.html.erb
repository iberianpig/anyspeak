<% if logged_in?  %>
  <div class="row">
    <div class="col-xs-12 col-md-7">
      <div class="embed-responsive embed-responsive-4by3">
        <div id="others-jumbotron" class="jumbotron">
          <h2>Enjoy AnySpeak!</h2>
          <p>
          ここに通話相手の映像が表示されます。<br>
          <h5 style="font-size:0.8;">
            マイク/カメラ付きのPCでなければ利用できません。<br>
            最新のChrome/Firefoxのみサポートしています <br>
          </h5>
          <br>
          </p>
        </div>
        <video id="others-video" class="hide" autoplay style="width:100%;"></video>
      </div>
    </div>
    <div class="col-xs-12 col-md-5">
      <div class="row clearfix">
        <div class="col-xs-4 col-md-4">
          <div class="embed-responsive embed-responsive-4by3">
            <div id="my-jumbotron" class="well"><small>ここに自分の映像が表示されます</small></div>
            <video id="my-video" muted autoplay style="width:100%;" ></video>
          </div>
          <div>
            <%= link_to "disconnect", "", onclick: "resetPeer();",class:"btn btn-warning btn-sm btn-block" %> 
          </div>
        </div>
        <div id="user_list" class='col-xs-8 col-md-8'>
          <%= render partial: 'user_list' %>
        </div>
      </div>
      <div class="row clearfix" style="margin-top:30px;">
        <div id="receive_message" class="well"></div>
        <input type="text" placeholder="send message" class="block" id="message"><input type="button" class="btn btn-sm btn-default" onClick="sendMessage();" value="send" />
      </div>
    </div>
  </div>


  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
  <script type="text/javascript" src="http://cdn.peerjs.com/0.3/peer.min.js"></script>
  <script>

// CSRF-TokenをAjaxのヘッダに突っ込む

// ベンダプレフィックスの差を吸収する
navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

var my_id;
var peer; 
var timer_for_update;

getNewPeer();

//peerのId( 自分のID )を取得
function getNewPeer(){
  peer = new Peer({key: 'gezmoslk1bye3ik9'});
  peer.on('open', function(id){
    my_id = id;
    console.log("my_id): " + my_id);
    startTimer();
  });
}

function startTimer(){
  timer_for_update = setInterval(function(){
    updateConnectUid();
    updateUserStatus();
  }, 5000);
}

function stopTimer(){
  clearInterval(timer_for_update);
}

function updateConnectUid(){
  var csrfToken = $('meta[name="csrf-token"]').attr('content');
  $.ajax({
    type: "post",
    cache: false,
    url: "update_connect_uid",
    data: {'connect_uid': peer.id,
      'authenticity_token': csrfToken
    }
  })
  .done(function( msg ) {
    console.log("update_id:"+ peer.id);
  });
}


//close and reset my connetion
function resetPeer(){
  peer.destroy();
  hideDisplay('others-video', true);
  stopTimer();
  getNewPeer();
  hideDisplay('my-video', true);
  updateConnectUid();
}

function hideDisplay(display, bool){
  if(display==='others-video'){
    if(bool===true){
      $("#others-jumbotron").removeClass('hide');
      $("#others-video").addClass('hide');
    }else{
      $("#others-jumbotron").addClass('hide');
      $("#others-video").removeClass('hide');
    }
  }else if(display==='my-video'){
    if(bool===true){
      $("#my-jumbotron").removeClass('hide');
      $("#my-video").addClass('hide');
    }else{
      $("#my-jumbotron").addClass('hide');
      $("#my-video").removeClass('hide');
    }
  }
}

//sync user_list partial
function updateUserStatus(){
  $.ajax({
      type: "get",
      url: "",
      dataType: "script"
  });
}

var myStream;
$(function(){
  navigator.getUserMedia({audio: true, video: true}, function(stream){
    myStream = stream;
    $('#my-video').prop('src', URL.createObjectURL(stream));
    hideDisplay('my-video', false);
  }, function(){});
});


var other_peer_id;
var other_peer_name;
var conn;

//target peer id の取得とCall
function callTo(user_id){
  console.log("find:"+ user_id);
  $.ajax({
    type: "get",
    cache: false,
    url: "find_connect_uid/" + user_id,
    success: function(data){
      console.log("got and callTo:"+ user_id);
      other_peer_id = data.connect_uid;
      other_peer_name = data.name;
      var call = peer.call(other_peer_id, myStream);
      conn = peer.connect(other_peer_id);
      call.on('stream', function(othersStream){
        $('#others-video').prop('src', URL.createObjectURL(othersStream));
      });
      hideDisplay('others-video', false);
    }
  });
}

// function findUser(user_id){
//   $.ajax({
//     type: "get",
//     cache: false,
//     url: "find_connect_uid/" + user_id,
//     success: function(data){
//       other_peer_id = data.connect_uid;
//       other_peer_name = data.name;
//       conn = peer.connect(other_peer_id);
// }

//VideoCall着信時の処理
peer.on('call', function(call){
  call.answer(myStream);
  conn = peer.connect(call.peer); //テキスト受信用connection
  call.on('stream', function(othersStream){
    $('#others-video').prop('src', URL.createObjectURL(othersStream));
  });
  hideDisplay('others-video', false);
});

//テキスト送信
function sendMessage(){
  var message = $("#message").val();
  console.log(message);
  conn.send(message);
  $( "#receive_message" ).append('<div class="alert alert-info">I: ' + message + '</div>');
}

peer.on('connection', function(conn){
  conn.on('data', function(data){
    $( "#receive_message" ).append('<div class="alert alert-warning">You: ' + data + '</div>');
  });
});

//エラー時のログ
peer.on('error', function(e){
  console.log(e.message);
});

  </script>
<% else %>
  <div class="jumbotron">
    <h1>Welcome to AnySpeak!</h1>
    <p>
    AnySpeakではブラウザだけで簡単にVideo通話ができます。<br>
    Facebookアカウントさえあればすぐに利用可能です。<br>
    </p>
     <%= link_to "Start AnySpeak", "/auth/facebook", class:"btn btn-primary btn-lg" %> 
    <p>
    <h5 style="font-size:0.5em;">
      Facebookログイン機能を利用します。
      アプリがWallなどに勝手に投稿することはありません。<br><br>
      マイク/カメラ付きのPCでなければ利用できません。<br>
      また、最新のChrome/Firefoxのみ動作確認済です。(safariは利用不可) <br>
    </h5>
    <br>
    </p>
  </div>
<% end %>

